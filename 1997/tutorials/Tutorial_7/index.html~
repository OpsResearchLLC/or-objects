<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="Author" content="DRA Systems">
   <meta name="GENERATOR" content="Mozilla/4.61 [en] (WinNT; I) [Netscape]">
   <title>OR-Objects Tutorial 6</title>
</head>
<body background="../../../Images/paper.gif" nosave>
&nbsp;
<table CELLSPACING=4 >
<tr>
<td><a href="http://OpsResearch.com" target="_parent">Home</a></td>

<td><a href="../../index.html">OR-Objects</a></td>

<td><a href="../index.html">Tutorials</a></td>

<td><a href="../Tutorial_6/index.html">Prev</a></td>

<td></td>
</tr>
</table>

<br>&nbsp;
<center>
<h1>
Tutorial 7 - Parallel BLAS</h1></center>

<center>
<p><br><applet ARCHIVE="../or.jar" CODE="Tutorial_7.class" WIDTH=252 HEIGHT=397></applet></center>

<p>In this tutorial you will develop an applet to measure the scalability
of the matrix multiply in the parallel BLAS implementation. The applet
computes the rate of floating point operations for thread counts of '1'
to '16'. The rate will scale on Java virtual machines that use native threads
and are running on an SMP platform that distributes threads across multiple
processors. In the freeware version of OR-Objects, the cache coherency
is highest if matrix A is row-major and matrix B is column-major.
<p>For simplicity, the applet details will be skipped. If you would like
to see all the details then view the <a href="Tutorial_7.txt">complete
source</a>.
<p>
<hr WIDTH="100%">
<h2>
Tutorial 7 - Contents</h2>

<ul>
<li>
Initialize</li>

<ul>
<li>
<a href="#buildMatrices">Build Matrices</a></li>

<li>
<a href="#createBLAS">Create BLAS3</a></li>
</ul>

<li>
Test</li>

<ul>
<li>
<a href="#callBLAS">Call BLAS</a></li>

<li>
<a href="#computeRate">Compute Rate</a></li>
</ul>
</ul>

<hr WIDTH="100%">
<h2>
<a NAME="buildMatrices"></a>Initialize - Build Matrices</h2>
The method 'buildMatrix' creates a matrix with 'm' rows and 'n' columns
and initializesthe elements with random values. The type of matrix constructed
is determined by the argument 'type'.
<pre><tt>&nbsp;&nbsp;&nbsp; public <a href="../../api/drasys/or/matrix/ContiguousMatrixI.html">ContiguousMatrixI
</a>&nbsp;&nbsp;&nbsp;&nbsp;<a NAME="buildMatrix"></a>buildMatrix(String type, int mChoice, int nChoice)
&nbsp;&nbsp;&nbsp; {
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="../../api/drasys/or/matrix/ContiguousMatrixI.html">ContiguousMatrixI</a> A = null;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(type.equals("RowMajor")){
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A = new <a href="../../api/drasys/or/matrix/RowMajorMatrix.html">RowMajorMatrix</a>(mChoice,nChoice);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else if(type.equals("ColumnMajor")){
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A = new <a href="../../api/drasys/or/matrix/ColumnMajorMatrix.html">ColumnMajorMatrix</a>(mChoice,nChoice);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new <a href="../../api/drasys/or/prob/UniformDistribution.html">UniformDistribution</a>().setElements(A);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return A;
&nbsp;&nbsp;&nbsp; }</tt></pre>
The first few lines of the method 'test' get the parameters and call 'buildMatrix'
to create the three matrices.
<pre><tt>&nbsp;&nbsp;&nbsp; public void
&nbsp;&nbsp;&nbsp;&nbsp;<a NAME="test"></a>test()
&nbsp;&nbsp;&nbsp; {
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int m = new Integer(mChoice.getSelectedItem()).intValue();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int n = new Integer(nChoice.getSelectedItem()).intValue();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int k = new Integer(kChoice.getSelectedItem()).intValue();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; double alpha = new Double(alphaChoice.getSelectedItem()).doubleValue();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; double beta = new Double(betaChoice.getSelectedItem()).doubleValue();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="../../api/drasys/or/matrix/ContiguousMatrixI.html">ContiguousMatrixI</a> A = <a href="#buildMatrix">buildMatrix</a>(typea.getSelectedItem(), m, k);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ContiguousMatrixI B = buildMatrix(typeb.getSelectedItem(), k, n);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ContiguousMatrixI C = buildMatrix(typec.getSelectedItem(), m, n);</tt></pre>

<hr WIDTH="100%">
<h2>
<a NAME="createBLAS"></a>Initialize - Create BLAS</h2>
These four lines from <a href="#test">test()</a> clear the bar graph and
create the matrix algorithm using an SMP algorithm for the underlying implementation.
The SMP minimum work is set to '0' so that 'maximumThreads'&nbsp; threads
are used.
<br>&nbsp;
<pre><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; values = null;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; paint(getGraphics());
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="../../api/drasys/or/linear/blas/SmpBLAS3.html">SmpBLAS3</a> smp = new <a href="../../api/drasys/or/linear/blas/SmpBLAS3.html#SmpBLAS3()">SmpBLAS3()</a>;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; smp.getSmp().<a href="../../api/drasys/or/util/Smp.html#setMinWork(int)">setMinWork(0)</a>;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="../../api/drasys/or/linear/blas/MatrixBLAS3.html">MatrixBLAS3</a> blas3 = new <a href="../../api/drasys/or/linear/blas/MatrixBLAS3.html#MatrixBLAS3(int, drasys.or.linear.blas.BLAS3I)">MatrixBLAS3(0, smp)</a>;</tt></pre>

<hr WIDTH="100%">
<h2>
<a NAME="callBLAS"></a>Test - Call BLAS</h2>
The 'for' loop iterates from '1' to '16' thread counts. The 'while' loop
forces the test for each thread count to run at least one second.
<pre><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; double max=0, min=0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; values = new double[maxBars];
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(int i=0; i&lt;maxBars; i++){
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; smp.getSmp().<a href="../../api/drasys/or/util/Smp.html#setMaxThreads(int)">setMaxThreads</a>(i+1);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; msgLabel.setText("Threads - "+(i+1));
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int it = 0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; long time = 0;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while(time &lt; 1000){
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Date t1 = new Date();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try{blas3.<a href="../../api/drasys/or/linear/blas/MatrixBLAS3.html#dgemm(boolean, boolean, double, drasys.or.matrix.ContiguousMatrixI, drasys.or.matrix.ContiguousMatrixI, double, drasys.or.matrix.ContiguousMatrixI)">dgemm(false, false, alpha, A, B, beta, C)</a>;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; catch(<a href="../../api/drasys/or/linear/blas/BlasException.html">BlasException</a> e){}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Date t2 = new Date();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; time += t2.getTime() - t1.getTime();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; it++;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</tt></pre>

<hr WIDTH="100%">
<h2>
<a NAME="computeRate"></a>Test - Compute Rate</h2>
The floating point rate is computed in millions of floating point operation
sper second (MFLOPS). The matrix multiplication must compute the dot product
of a row from 'A' and a column from 'B' for each element in 'C'. This requires
(k*m*n) additions and (k*m*n) multiplications. Each dot product must be
multiplied by 'alpha' this requires (m*n) multiplications. Each element
in 'C' must be multiplied by 'beta' and summed with the dot product, this
requires (m*n) multiplies and (m*n) additions. Finally this total must
be multiplied by the number of times 'dgemm()' was called to extend the
test past one second.
<pre><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; double t = 1000.0 * (double)time;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; double mflops = ((double)(m*n*(2*k+3)*it))/t;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(mflops);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; values[i] = mflops;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(i == 0 || mflops > max) max = mflops;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(i == 0 || mflops &lt; min) min = mflops;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; msgLabel.setText("MFLOPS:&nbsp; max = "+(int)(max+0.5)+",&nbsp; min = "+(int)(min+0.5));
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; paint(getGraphics());</tt></pre>

<hr SIZE=5 WIDTH="100%">
<center><table>
<tr>
<td VALIGN=TOP><a href="http://www.amazon.com/exec/obidos/redirect-home/opsresearchcomA" TARGET="amazon.com"><img SRC="../../../Images/readmore.gif" ALT="In Association with Amazon.com" NOSAVE BORDER=0 height=70 width=100></a></td>

<td>
<center><form METHOD="get" ACTION="http://www.amazon.com/exec/obidos/external-search/"  TARGET="amazon.com"></center>

<center><table BORDER CELLSPACING=0 CELLPADDING=5 BGCOLOR="#FFFFFF" >
<tr>
<td ALIGN=CENTER VALIGN=TOP><input TYPE= "text" NAME="keyword" SIZE=20 VALUE=" "><input TYPE= "hidden" NAME="tag" VALUE="opsresearchcomA"><input TYPE="submit" VALUE="Search" >
<br><a href="http://www.amazon.com/exec/obidos/redirect-home/opsresearchcomA" TARGET="amazon.com"><img SRC="../../../Images/logo-plain.gif" VSPACE=2 NOSAVE BORDER=0 height=24 width=172></a></td>
</tr>
</table></center>
</form></td>

<td VALIGN=TOP><a href="http://www.amazon.com/exec/obidos/redirect-home/opsresearchcomA" TARGET="amazon.com"><img SRC="../../../Images/readmore.gif" ALT="In Association with Amazon.com" NOSAVE BORDER=0 height=70 width=100></a></td>
</tr>
</table></center>
<font size=-1><a href="../copyright.html">Copyright (C) 1997-2000 by DRA
Systems all rights reserved.</a></font><img SRC="../../../cgi/log.cgi?O-Tutorial-6" NOSAVE height=1 width=1>
<br>&nbsp;
<br>&nbsp;
<br>&nbsp;
<br>&nbsp;
<br>&nbsp;
<br>&nbsp;
</body>
</html>
